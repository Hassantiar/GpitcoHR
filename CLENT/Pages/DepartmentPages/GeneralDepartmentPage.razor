@using Base.Entites
@using CLENT.Application_States
@implements IDisposable

@if (allstates.ShowGeneralDepartment)
{
    <div class="container mt-5">
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-header">
                        <h4 class="float-start">General Department</h4>
                        <button class="btn btn-outline-success float-end" @onclick="OpenDialog"><i class="bi bi-plus-circle-dotted">Add Department</i></button>
                    </div>
                    <div class="card-header">
                        <div class="card-body">
                            <table class="table table-striped">
                                    <thead>
                                        <tr>
                                            <th scope="col">#</th>
                                            <th scope="col">First</th>
                                            <th scope="col">Last</th>
                                            <th scope="col">Handle</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <th scope="row">1</th>
                                            <td>mark</td>
                                            <td>outt</td>
                                        </tr>
                                        <tr>
                                            <th scope="row">2</th>
                                            <td>mark</td>
                                            <td>outt</td>
                                        </tr>
                                        <tr>
                                            <th scope="row">3</th>
                                            <td>mark</td>
                                            <td>outt</td>
                                        </tr>
                                    </tbody>
                            </table>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
}
<GeneralDepartmentDialog @ref="generalDepartmentDialog" HandelSaveOperationEvent="HandelSaveOperationEvent" GeneralDepartment="GeneralDepartment" />
@code {
    GeneralDepartmentDialog? generalDepartmentDialog;
    GeneralDepartment GeneralDepartment = new();
    public string Tital { get; set; } = "Add";
    public List<GeneralDepartment> GeneralDepartments { get; set; } = new();
    protected async override Task  OnInitializedAsync()
    {
        await GetGeneralDepartments();
        allstates.Action += StateHasChanged;
    }
    private async Task GetGeneralDepartments()
    {
        GeneralDepartments = await generaldepartmentService.GetAll(Constans.GeneralDepartmentUrl);
    }
    void OpenDialog()
    {
        generalDepartmentDialog?.OpenDialog();
    }
    public void Dispose()
    {
        allstates.Action -= StateHasChanged;
    }
    private async Task HandelSaveOperationEvent(GeneralDepartment general)
    {
        bool successcheck = false;
        if (general.Id > 0)
        {
            var result = await generaldepartmentService.Update(general, Constans.GeneralDepartmentUrl);
            successcheck = await DesplayMessag(result.Flag, result.Message);
        }
        else
        {
            var resopns = await generaldepartmentService.Insert(general, Constans.GeneralDepartmentUrl);
            successcheck = await DesplayMessag(resopns.Flag, resopns.Message);
        }
        if (successcheck)
        {
            GeneralDepartment = new();
            await GetGeneralDepartments();
            generalDepartmentDialog?.ChangeTital("Add");
        }
    }
    private void EditeClicke(GeneralDepartment general)
    {
        generalDepartmentDialog?.ChangeTital("Edite");
        GeneralDepartment = general;
        OpenDialog();
    }
    private async Task<bool> DesplayMessag(bool flage, string message)
    {
        if (flage)
        {
            await dialogService.AlertAsync(message, "Success operation");
            return true;
        }
        else
        {
            await dialogService.AlertAsync(message, "Worning");
            return false;
        }
    }
}
